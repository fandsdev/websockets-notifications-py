[project]
name = "websockets-notification-py"
version = "0.0.1"
requires-python = ">=3.12"
dependencies = [
    "websockets",
    "aio-pika",
    "pydantic",
    "pydantic-settings",
    
    "httpx",
    "pyjwt[crypto]",

    "sentry-sdk",
]


[project.optional-dependencies]
dev = [
    "ipython",

    "pytest-deadfixtures",
    "pytest-mock",
    "pytest-randomly",
    "pytest-freezer",
    "pytest-asyncio",
    "respx",

    "dotenv-linter",
    "ruff",
    "mypy",
]


[tool.ruff]
line-length = 160
src = ["src"]


[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # missing type annotation for `cls` in classmethod
    "ANN401",  # dynamically typed expressions (typing.Any) are disallowed in `{}`
    "D100",  # missing docstring in public module
    "D101",  # missing docstring in public class
    "D102",  # missing docstring in public method
    "D103",  # missing docstring in public function
    "D104",  # missing docstring in public package
    "D105",  # missing docstring in magic method
    "D106",  # missing docstring in public nested class
    "D107",  # missing docstring in `__init__`
    "D203",  # one blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "PT001",  # use `@pytest.fixture()` over `@pytest.fixture`
    "INP001",  # file `%filename%` is part of an implicit namespace package. Add an `__init__.py`
    "TRY003",  # avoid specifying long messages outside the exception class
    "COM812",  # Trailing comma missing
    "EM101",  # exception must not use a string literal, assign to variable first
    "EM102",  # expection must not use an f-string literal, assign to variable first
    "N818",  # exception name `{}` should be named with an Error suffix
]


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.ruff.lint.per-file-ignores]
"**/tests/*" = [
    "ANN",  # flake8-annotations
    "S101", # Use of `assert` detected
    "ARG001",  # Unused function argument
    "PLR2004",  # Magic value used in comparison, consider replacing `%value%` with a constant variable
    "PLR0913",  # Too many arguments in function definition
]
"**/fixtures.py" = [
    "ANN", # flake8-annotations
]

[tool.ruff.lint.isort]
extra-standard-library = ["pytest"]


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["src"]
python_files = ["test*.py"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "rabbitmq: marks test as required rabbitmq conneciton",
]
asyncio_mode = "auto"


[tool.mypy]
python_version = "3.12"
mypy_path = "src"
files = "src"
namespace_packages = true
explicit_package_bases = true
warn_no_return = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
no_implicit_reexport = true
strict_equality = true
warn_unreachable = true
disallow_untyped_calls = true
